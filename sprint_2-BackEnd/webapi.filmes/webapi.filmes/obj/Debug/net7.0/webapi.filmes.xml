<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.filmes</name>
    </assembly>
    <members>
        <member name="M:webapi.filmes.Controllers.FilmeController.GetAll">
            <summary>
            endpoint que permite buscar por todos os filmes
            </summary>
        </member>
        <member name="M:webapi.filmes.Controllers.FilmeController.GetById(System.Int32)">
            <summary>
            endpoint que busca um filme através de seu id
            </summary>
        </member>
        <member name="M:webapi.filmes.Controllers.FilmeController.Registrar(webapi.filmes.Domains.FilmeDomain)">
            <summary>
            endpoint que permite criar um novo filme
            </summary>
        </member>
        <member name="M:webapi.filmes.Controllers.FilmeController.Delete(System.Int32)">
            <summary>
            endpoint que permite deletar um filme
            </summary>
        </member>
        <member name="M:webapi.filmes.Controllers.FilmeController.UpdateByIdUrl(System.Int32,webapi.filmes.Domains.FilmeDomain)">
            <summary>
            endpoint que permite atualizar um filme através do id passado pela url
            </summary>
        </member>
        <member name="M:webapi.filmes.Controllers.FilmeController.UpdateByIdBody(webapi.filmes.Domains.FilmeDomain)">
            <summary>
            endpoint que faz a atualização de um filme através dos dados passados no corpo da requisição
            </summary>
        </member>
        <member name="P:webapi.filmes.Controllers.GeneroController._generoRepository">
            <summary>
            objeto _generoRepository que ira receber todos os metodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.Controllers.GeneroController.Get">
             <summary>
            endpoint que aciona o metodo listarTodos do repositorio e retorna a resposta para o usuario(front-end)
             </summary>
        </member>
        <member name="M:webapi.filmes.Controllers.GeneroController.Post(webapi.filmes.Domains.GeneroDomain)">
            <summary>
            endpoint que aciona o metodo de cadastro do genero 
            </summary>
            <param name="novoGenero">objeto recebido na requisicao</param>
            <returns>status code 201(created)</returns>
        </member>
        <member name="M:webapi.filmes.Controllers.GeneroController.Delete(System.Int32)">
            <summary>
            endpoint que aciona o metodo de deletar um genero 
            </summary>
        </member>
        <member name="M:webapi.filmes.Controllers.GeneroController.GetById(System.Int32)">
             <summary>
            endpoint que busca um determinado genero apartir do seu Id
             </summary>
        </member>
        <member name="M:webapi.filmes.Controllers.GeneroController.Put(webapi.filmes.Domains.GeneroDomain)">
             <summary>
            endpoint que te permite atualizar um genero a partir do seu corpo(Id)
             </summary>
        </member>
        <member name="M:webapi.filmes.Controllers.GeneroController.UpdateByIdUrl(System.Int32,webapi.filmes.Domains.GeneroDomain)">
            <summary>
            atualiza um gênero pelo id passado por sua url
            </summary>
        </member>
        <member name="M:webapi.filmes.Interfaces.IGeneroRepository.Cadastrar(webapi.filmes.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="novoGenero"> objeto que será cadastrado </param>
        </member>
        <member name="M:webapi.filmes.Interfaces.IGeneroRepository.ListarTodos">
            <summary>
            Listar todos os objetos cadastrados
            </summary>
            <returns> lista de objetos cadastrados </returns>
        </member>
        <member name="M:webapi.filmes.Interfaces.IGeneroRepository.AtualizarIdCorpo(webapi.filmes.Domains.GeneroDomain)">
            <summary>
            Atualiza um objeto existente passando seu id pelo corpo da requisição
            </summary>
            <param name="genero"> objeto a ser atualizado (novas informações) </param>
        </member>
        <member name="M:webapi.filmes.Interfaces.IGeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.Domains.GeneroDomain)">
            <summary>
            Atualiza um objeto existente passando seu id pela url da requisição
            </summary>
            <param name="id"> id do objeto que será atualizado </param>
            <param name="genero"> objeto a ser atualizado (novas informações) </param>
        </member>
        <member name="M:webapi.filmes.Interfaces.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Método para deletar um objeto existente passando seu id 
            </summary>
            <param name="id"> id do objeto a ser deletado </param>
        </member>
        <member name="M:webapi.filmes.Interfaces.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar objeto existente pelo id que está cadastrado
            </summary>
            <param name="id"> id do objeto a ser buscado </param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.Repositories.FilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um filme por id
            </summary>
        </member>
        <member name="M:webapi.filmes.Repositories.FilmeRepository.BuscarTodos">
            <summary>
            Busca por todos os filmes
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:webapi.filmes.Repositories.FilmeRepository.Deletar(System.Int32)" -->
        <member name="M:webapi.filmes.Repositories.FilmeRepository.Registrar(webapi.filmes.Domains.FilmeDomain)">
            <summary>
            Registra um novo filme
            </summary>
        </member>
    </members>
</doc>
